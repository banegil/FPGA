   1              		.cpu arm7tdmi
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 18, 4
  11              		.file	"pbs.c"
  21              	.Ltext0:
  22              		.file 1 "../src/pbs.c"
 1917              		.align	2
 1918              		.global	pbs_init
 1920              	pbs_init:
 1921              	.LFB0:
   1:../src/pbs.c  **** 
   2:../src/pbs.c  **** #include <s3c44b0x.h>
   3:../src/pbs.c  **** #include <s3cev40.h>
   4:../src/pbs.c  **** #include <pbs.h>
   5:../src/pbs.c  **** #include <timers.h>
   6:../src/pbs.c  **** 
   7:../src/pbs.c  **** extern void isr_PB_dummy( void );
   8:../src/pbs.c  **** 
   9:../src/pbs.c  **** void pbs_init( void )
  10:../src/pbs.c  **** {
 1922              		.loc 1 10 0
 1923              		.cfi_startproc
 1924              		@ Function supports interworking.
 1925              		@ args = 0, pretend = 0, frame = 0
 1926              		@ frame_needed = 1, uses_anonymous_args = 0
 1927 0000 0DC0A0E1 		mov	ip, sp
 1928              	.LCFI0:
 1929              		.cfi_def_cfa_register 12
 1930 0004 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1931 0008 04B04CE2 		sub	fp, ip, #4
 1932              		.cfi_offset 14, -8
 1933              		.cfi_offset 13, -12
 1934              		.cfi_offset 11, -16
 1935              	.LCFI1:
 1936              		.cfi_def_cfa 11, 4
  11:../src/pbs.c  ****     timers_init();
 1937              		.loc 1 11 0
 1938 000c FEFFFFEB 		bl	timers_init
  12:../src/pbs.c  **** }
 1939              		.loc 1 12 0
 1940 0010 0CD04BE2 		sub	sp, fp, #12
 1941 0014 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1942 0018 1EFF2FE1 		bx	lr
 1943              		.cfi_endproc
 1944              	.LFE0:
 1946              		.align	2
 1947              		.global	pb_scan
 1949              	pb_scan:
 1950              	.LFB1:
  13:../src/pbs.c  **** 
  14:../src/pbs.c  **** uint8 pb_scan( void )
  15:../src/pbs.c  **** {
 1951              		.loc 1 15 0
 1952              		.cfi_startproc
 1953              		@ Function supports interworking.
 1954              		@ args = 0, pretend = 0, frame = 0
 1955              		@ frame_needed = 1, uses_anonymous_args = 0
 1956 001c 0DC0A0E1 		mov	ip, sp
 1957              	.LCFI2:
 1958              		.cfi_def_cfa_register 12
 1959 0020 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1960 0024 04B04CE2 		sub	fp, ip, #4
 1961              		.cfi_offset 14, -8
 1962              		.cfi_offset 13, -12
 1963              		.cfi_offset 11, -16
 1964              	.LCFI3:
 1965              		.cfi_def_cfa 11, 4
  16:../src/pbs.c  ****     if((PDATG & PB_LEFT) == 0)
 1966              		.loc 1 16 0
 1967 0028 44309FE5 		ldr	r3, .L6
 1968 002c 003093E5 		ldr	r3, [r3, #0]
 1969 0030 403003E2 		and	r3, r3, #64
 1970 0034 000053E3 		cmp	r3, #0
 1971 0038 0100001A 		bne	.L3
  17:../src/pbs.c  ****         return PB_LEFT;
 1972              		.loc 1 17 0
 1973 003c 4030A0E3 		mov	r3, #64
 1974 0040 070000EA 		b	.L4
 1975              	.L3:
  18:../src/pbs.c  ****     else if((PDATG & PB_RIGHT)  == 0)
 1976              		.loc 1 18 0
 1977 0044 28309FE5 		ldr	r3, .L6
 1978 0048 003093E5 		ldr	r3, [r3, #0]
 1979 004c 803003E2 		and	r3, r3, #128
 1980 0050 000053E3 		cmp	r3, #0
 1981 0054 0100001A 		bne	.L5
  19:../src/pbs.c  ****         return PB_RIGHT;
 1982              		.loc 1 19 0
 1983 0058 8030A0E3 		mov	r3, #128
 1984 005c 000000EA 		b	.L4
 1985              	.L5:
  20:../src/pbs.c  ****     else
  21:../src/pbs.c  ****         return PB_FAILURE;
 1986              		.loc 1 21 0
 1987 0060 FF30A0E3 		mov	r3, #255
 1988              	.L4:
  22:../src/pbs.c  **** }
 1989              		.loc 1 22 0
 1990 0064 0300A0E1 		mov	r0, r3
 1991 0068 0CD04BE2 		sub	sp, fp, #12
 1992 006c 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1993 0070 1EFF2FE1 		bx	lr
 1994              	.L7:
 1995              		.align	2
 1996              	.L6:
 1997 0074 4400D201 		.word	30539844
 1998              		.cfi_endproc
 1999              	.LFE1:
 2001              		.align	2
 2002              		.global	pb_status
 2004              	pb_status:
 2005              	.LFB2:
  23:../src/pbs.c  **** 
  24:../src/pbs.c  **** uint8 pb_status( uint8 scancode )
  25:../src/pbs.c  **** {
 2006              		.loc 1 25 0
 2007              		.cfi_startproc
 2008              		@ Function supports interworking.
 2009              		@ args = 0, pretend = 0, frame = 8
 2010              		@ frame_needed = 1, uses_anonymous_args = 0
 2011 0078 0DC0A0E1 		mov	ip, sp
 2012              	.LCFI4:
 2013              		.cfi_def_cfa_register 12
 2014 007c 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2015 0080 04B04CE2 		sub	fp, ip, #4
 2016              		.cfi_offset 14, -8
 2017              		.cfi_offset 13, -12
 2018              		.cfi_offset 11, -16
 2019              	.LCFI5:
 2020              		.cfi_def_cfa 11, 4
 2021 0084 08D04DE2 		sub	sp, sp, #8
 2022 0088 0030A0E1 		mov	r3, r0
 2023 008c 0D304BE5 		strb	r3, [fp, #-13]
  26:../src/pbs.c  **** 	if (scancode == PB_LEFT) {
 2024              		.loc 1 26 0
 2025 0090 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 2026 0094 400053E3 		cmp	r3, #64
 2027 0098 0700001A 		bne	.L9
  27:../src/pbs.c  **** 		if ((pb_scan() == PB_LEFT))return PB_DOWN;
 2028              		.loc 1 27 0
 2029 009c FEFFFFEB 		bl	pb_scan
 2030 00a0 0030A0E1 		mov	r3, r0
 2031 00a4 400053E3 		cmp	r3, #64
 2032 00a8 0100001A 		bne	.L10
 2033              		.loc 1 27 0 is_stmt 0 discriminator 1
 2034 00ac 0130A0E3 		mov	r3, #1
 2035 00b0 0D0000EA 		b	.L11
 2036              	.L10:
  28:../src/pbs.c  **** 		else return PB_UP;
 2037              		.loc 1 28 0 is_stmt 1
 2038 00b4 0030A0E3 		mov	r3, #0
 2039 00b8 0B0000EA 		b	.L11
 2040              	.L9:
  29:../src/pbs.c  **** 	} else if (scancode == PB_RIGHT) {
 2041              		.loc 1 29 0
 2042 00bc 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 2043 00c0 800053E3 		cmp	r3, #128
 2044 00c4 0700001A 		bne	.L12
  30:../src/pbs.c  **** 		if (pb_scan() == PB_RIGHT)return PB_DOWN;
 2045              		.loc 1 30 0
 2046 00c8 FEFFFFEB 		bl	pb_scan
 2047 00cc 0030A0E1 		mov	r3, r0
 2048 00d0 800053E3 		cmp	r3, #128
 2049 00d4 0100001A 		bne	.L13
 2050              		.loc 1 30 0 is_stmt 0 discriminator 1
 2051 00d8 0130A0E3 		mov	r3, #1
 2052 00dc 020000EA 		b	.L11
 2053              	.L13:
  31:../src/pbs.c  **** 		else return PB_UP;
 2054              		.loc 1 31 0 is_stmt 1
 2055 00e0 0030A0E3 		mov	r3, #0
 2056 00e4 000000EA 		b	.L11
 2057              	.L12:
  32:../src/pbs.c  **** 	}
  33:../src/pbs.c  **** 	else return PB_FAILURE;
 2058              		.loc 1 33 0
 2059 00e8 FF30A0E3 		mov	r3, #255
 2060              	.L11:
  34:../src/pbs.c  **** }
 2061              		.loc 1 34 0
 2062 00ec 0300A0E1 		mov	r0, r3
 2063 00f0 0CD04BE2 		sub	sp, fp, #12
 2064 00f4 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2065 00f8 1EFF2FE1 		bx	lr
 2066              		.cfi_endproc
 2067              	.LFE2:
 2069              		.align	2
 2070              		.global	pb_wait_keydown
 2072              	pb_wait_keydown:
 2073              	.LFB3:
  35:../src/pbs.c  **** 
  36:../src/pbs.c  **** void pb_wait_keydown( uint8 scancode )
  37:../src/pbs.c  **** {
 2074              		.loc 1 37 0
 2075              		.cfi_startproc
 2076              		@ Function supports interworking.
 2077              		@ args = 0, pretend = 0, frame = 8
 2078              		@ frame_needed = 1, uses_anonymous_args = 0
 2079 00fc 0DC0A0E1 		mov	ip, sp
 2080              	.LCFI6:
 2081              		.cfi_def_cfa_register 12
 2082 0100 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2083 0104 04B04CE2 		sub	fp, ip, #4
 2084              		.cfi_offset 14, -8
 2085              		.cfi_offset 13, -12
 2086              		.cfi_offset 11, -16
 2087              	.LCFI7:
 2088              		.cfi_def_cfa 11, 4
 2089 0108 08D04DE2 		sub	sp, sp, #8
 2090 010c 0030A0E1 		mov	r3, r0
 2091 0110 0D304BE5 		strb	r3, [fp, #-13]
  38:../src/pbs.c  **** 	if (scancode == PB_LEFT) while (PDATG & PB_LEFT);
 2092              		.loc 1 38 0
 2093 0114 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 2094 0118 400053E3 		cmp	r3, #64
 2095 011c 0600001A 		bne	.L19
 2096 0120 0000A0E1 		mov	r0, r0	@ nop
 2097              	.L16:
 2098              		.loc 1 38 0 is_stmt 0 discriminator 1
 2099 0124 34309FE5 		ldr	r3, .L20
 2100 0128 003093E5 		ldr	r3, [r3, #0]
 2101 012c 403003E2 		and	r3, r3, #64
 2102 0130 000053E3 		cmp	r3, #0
 2103 0134 FAFFFF1A 		bne	.L16
 2104              		.loc 1 38 0
 2105 0138 050000EA 		b	.L14
 2106              	.L19:
  39:../src/pbs.c  **** 	else while (PDATG & PB_RIGHT);
 2107              		.loc 1 39 0 is_stmt 1
 2108 013c 0000A0E1 		mov	r0, r0	@ nop
 2109              	.L18:
 2110              		.loc 1 39 0 is_stmt 0 discriminator 1
 2111 0140 18309FE5 		ldr	r3, .L20
 2112 0144 003093E5 		ldr	r3, [r3, #0]
 2113 0148 803003E2 		and	r3, r3, #128
 2114 014c 000053E3 		cmp	r3, #0
 2115 0150 FAFFFF1A 		bne	.L18
 2116              	.L14:
  40:../src/pbs.c  **** 
  41:../src/pbs.c  **** }
 2117              		.loc 1 41 0 is_stmt 1
 2118 0154 0CD04BE2 		sub	sp, fp, #12
 2119 0158 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2120 015c 1EFF2FE1 		bx	lr
 2121              	.L21:
 2122              		.align	2
 2123              	.L20:
 2124 0160 4400D201 		.word	30539844
 2125              		.cfi_endproc
 2126              	.LFE3:
 2128              		.align	2
 2129              		.global	pb_wait_keyup
 2131              	pb_wait_keyup:
 2132              	.LFB4:
  42:../src/pbs.c  **** 
  43:../src/pbs.c  **** void pb_wait_keyup( uint8 scancode )
  44:../src/pbs.c  **** {
 2133              		.loc 1 44 0
 2134              		.cfi_startproc
 2135              		@ Function supports interworking.
 2136              		@ args = 0, pretend = 0, frame = 8
 2137              		@ frame_needed = 1, uses_anonymous_args = 0
 2138 0164 0DC0A0E1 		mov	ip, sp
 2139              	.LCFI8:
 2140              		.cfi_def_cfa_register 12
 2141 0168 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2142 016c 04B04CE2 		sub	fp, ip, #4
 2143              		.cfi_offset 14, -8
 2144              		.cfi_offset 13, -12
 2145              		.cfi_offset 11, -16
 2146              	.LCFI9:
 2147              		.cfi_def_cfa 11, 4
 2148 0170 08D04DE2 		sub	sp, sp, #8
 2149 0174 0030A0E1 		mov	r3, r0
 2150 0178 0D304BE5 		strb	r3, [fp, #-13]
  45:../src/pbs.c  **** 	if (scancode == PB_LEFT) {
 2151              		.loc 1 45 0
 2152 017c 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 2153 0180 400053E3 		cmp	r3, #64
 2154 0184 0E00001A 		bne	.L29
  46:../src/pbs.c  **** 		while ((PDATG & PB_LEFT));
 2155              		.loc 1 46 0
 2156 0188 0000A0E1 		mov	r0, r0	@ nop
 2157              	.L24:
 2158              		.loc 1 46 0 is_stmt 0 discriminator 1
 2159 018c 74309FE5 		ldr	r3, .L30
 2160 0190 003093E5 		ldr	r3, [r3, #0]
 2161 0194 403003E2 		and	r3, r3, #64
 2162 0198 000053E3 		cmp	r3, #0
 2163 019c FAFFFF1A 		bne	.L24
  47:../src/pbs.c  **** 		sw_delay_ms(PB_KEYDOWN_DELAY);
 2164              		.loc 1 47 0 is_stmt 1
 2165 01a0 1E00A0E3 		mov	r0, #30
 2166 01a4 FEFFFFEB 		bl	sw_delay_ms
  48:../src/pbs.c  **** 		while (!(PDATG & PB_LEFT));
 2167              		.loc 1 48 0
 2168 01a8 0000A0E1 		mov	r0, r0	@ nop
 2169              	.L25:
 2170              		.loc 1 48 0 is_stmt 0 discriminator 1
 2171 01ac 54309FE5 		ldr	r3, .L30
 2172 01b0 003093E5 		ldr	r3, [r3, #0]
 2173 01b4 403003E2 		and	r3, r3, #64
 2174 01b8 000053E3 		cmp	r3, #0
 2175 01bc FAFFFF0A 		beq	.L25
 2176              		.loc 1 48 0
 2177 01c0 0D0000EA 		b	.L22
 2178              	.L29:
  49:../src/pbs.c  **** 	} else {
  50:../src/pbs.c  **** 		while ((PDATG & PB_RIGHT));
 2179              		.loc 1 50 0 is_stmt 1
 2180 01c4 0000A0E1 		mov	r0, r0	@ nop
 2181              	.L27:
 2182              		.loc 1 50 0 is_stmt 0 discriminator 1
 2183 01c8 38309FE5 		ldr	r3, .L30
 2184 01cc 003093E5 		ldr	r3, [r3, #0]
 2185 01d0 803003E2 		and	r3, r3, #128
 2186 01d4 000053E3 		cmp	r3, #0
 2187 01d8 FAFFFF1A 		bne	.L27
  51:../src/pbs.c  **** 		sw_delay_ms(PB_KEYDOWN_DELAY);
 2188              		.loc 1 51 0 is_stmt 1
 2189 01dc 1E00A0E3 		mov	r0, #30
 2190 01e0 FEFFFFEB 		bl	sw_delay_ms
  52:../src/pbs.c  **** 		while (!(PDATG & PB_RIGHT));
 2191              		.loc 1 52 0
 2192 01e4 0000A0E1 		mov	r0, r0	@ nop
 2193              	.L28:
 2194              		.loc 1 52 0 is_stmt 0 discriminator 1
 2195 01e8 18309FE5 		ldr	r3, .L30
 2196 01ec 003093E5 		ldr	r3, [r3, #0]
 2197 01f0 803003E2 		and	r3, r3, #128
 2198 01f4 000053E3 		cmp	r3, #0
 2199 01f8 FAFFFF0A 		beq	.L28
 2200              	.L22:
  53:../src/pbs.c  **** 	}
  54:../src/pbs.c  **** }
 2201              		.loc 1 54 0 is_stmt 1
 2202 01fc 0CD04BE2 		sub	sp, fp, #12
 2203 0200 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2204 0204 1EFF2FE1 		bx	lr
 2205              	.L31:
 2206              		.align	2
 2207              	.L30:
 2208 0208 4400D201 		.word	30539844
 2209              		.cfi_endproc
 2210              	.LFE4:
 2212              		.align	2
 2213              		.global	pb_wait_any_keydown
 2215              	pb_wait_any_keydown:
 2216              	.LFB5:
  55:../src/pbs.c  **** 
  56:../src/pbs.c  **** void pb_wait_any_keydown( void )
  57:../src/pbs.c  **** {
 2217              		.loc 1 57 0
 2218              		.cfi_startproc
 2219              		@ Function supports interworking.
 2220              		@ args = 0, pretend = 0, frame = 0
 2221              		@ frame_needed = 1, uses_anonymous_args = 0
 2222 020c 0DC0A0E1 		mov	ip, sp
 2223              	.LCFI10:
 2224              		.cfi_def_cfa_register 12
 2225 0210 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2226 0214 04B04CE2 		sub	fp, ip, #4
 2227              		.cfi_offset 14, -8
 2228              		.cfi_offset 13, -12
 2229              		.cfi_offset 11, -16
 2230              	.LCFI11:
 2231              		.cfi_def_cfa 11, 4
  58:../src/pbs.c  **** 	while ((PDATG & PB_LEFT)|| (PDATG & PB_RIGHT));
 2232              		.loc 1 58 0
 2233 0218 0000A0E1 		mov	r0, r0	@ nop
 2234              	.L33:
 2235              		.loc 1 58 0 is_stmt 0 discriminator 1
 2236 021c 2C309FE5 		ldr	r3, .L34
 2237 0220 003093E5 		ldr	r3, [r3, #0]
 2238 0224 403003E2 		and	r3, r3, #64
 2239 0228 000053E3 		cmp	r3, #0
 2240 022c FAFFFF1A 		bne	.L33
 2241              		.loc 1 58 0 discriminator 2
 2242 0230 18309FE5 		ldr	r3, .L34
 2243 0234 003093E5 		ldr	r3, [r3, #0]
 2244 0238 803003E2 		and	r3, r3, #128
 2245 023c 000053E3 		cmp	r3, #0
 2246 0240 F5FFFF1A 		bne	.L33
  59:../src/pbs.c  **** }
 2247              		.loc 1 59 0 is_stmt 1
 2248 0244 0CD04BE2 		sub	sp, fp, #12
 2249 0248 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2250 024c 1EFF2FE1 		bx	lr
 2251              	.L35:
 2252              		.align	2
 2253              	.L34:
 2254 0250 4400D201 		.word	30539844
 2255              		.cfi_endproc
 2256              	.LFE5:
 2258              		.align	2
 2259              		.global	pb_wait_any_keyup
 2261              	pb_wait_any_keyup:
 2262              	.LFB6:
  60:../src/pbs.c  **** 
  61:../src/pbs.c  **** void pb_wait_any_keyup( void )
  62:../src/pbs.c  **** {
 2263              		.loc 1 62 0
 2264              		.cfi_startproc
 2265              		@ Function supports interworking.
 2266              		@ args = 0, pretend = 0, frame = 0
 2267              		@ frame_needed = 1, uses_anonymous_args = 0
 2268 0254 0DC0A0E1 		mov	ip, sp
 2269              	.LCFI12:
 2270              		.cfi_def_cfa_register 12
 2271 0258 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2272 025c 04B04CE2 		sub	fp, ip, #4
 2273              		.cfi_offset 14, -8
 2274              		.cfi_offset 13, -12
 2275              		.cfi_offset 11, -16
 2276              	.LCFI13:
 2277              		.cfi_def_cfa 11, 4
  63:../src/pbs.c  **** 	while ((PDATG & PB_LEFT)|| (PDATG & PB_RIGHT));
 2278              		.loc 1 63 0
 2279 0260 0000A0E1 		mov	r0, r0	@ nop
 2280              	.L37:
 2281              		.loc 1 63 0 is_stmt 0 discriminator 1
 2282 0264 60309FE5 		ldr	r3, .L40
 2283 0268 003093E5 		ldr	r3, [r3, #0]
 2284 026c 403003E2 		and	r3, r3, #64
 2285 0270 000053E3 		cmp	r3, #0
 2286 0274 FAFFFF1A 		bne	.L37
 2287              		.loc 1 63 0 discriminator 2
 2288 0278 4C309FE5 		ldr	r3, .L40
 2289 027c 003093E5 		ldr	r3, [r3, #0]
 2290 0280 803003E2 		and	r3, r3, #128
 2291 0284 000053E3 		cmp	r3, #0
 2292 0288 F5FFFF1A 		bne	.L37
  64:../src/pbs.c  **** 	sw_delay_ms(PB_KEYDOWN_DELAY);
 2293              		.loc 1 64 0 is_stmt 1
 2294 028c 1E00A0E3 		mov	r0, #30
 2295 0290 FEFFFFEB 		bl	sw_delay_ms
  65:../src/pbs.c  **** 
  66:../src/pbs.c  **** 	while(!(PDATG & PB_LEFT) && !(PDATG & PB_RIGHT));
 2296              		.loc 1 66 0
 2297 0294 0000A0E1 		mov	r0, r0	@ nop
 2298              	.L39:
 2299              		.loc 1 66 0 is_stmt 0 discriminator 1
 2300 0298 2C309FE5 		ldr	r3, .L40
 2301 029c 003093E5 		ldr	r3, [r3, #0]
 2302 02a0 403003E2 		and	r3, r3, #64
 2303 02a4 000053E3 		cmp	r3, #0
 2304 02a8 0400001A 		bne	.L36
 2305              		.loc 1 66 0 discriminator 2
 2306 02ac 18309FE5 		ldr	r3, .L40
 2307 02b0 003093E5 		ldr	r3, [r3, #0]
 2308 02b4 803003E2 		and	r3, r3, #128
 2309 02b8 000053E3 		cmp	r3, #0
 2310 02bc F5FFFF0A 		beq	.L39
 2311              	.L36:
  67:../src/pbs.c  **** }
 2312              		.loc 1 67 0 is_stmt 1
 2313 02c0 0CD04BE2 		sub	sp, fp, #12
 2314 02c4 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2315 02c8 1EFF2FE1 		bx	lr
 2316              	.L41:
 2317              		.align	2
 2318              	.L40:
 2319 02cc 4400D201 		.word	30539844
 2320              		.cfi_endproc
 2321              	.LFE6:
 2323              		.align	2
 2324              		.global	pb_getchar
 2326              	pb_getchar:
 2327              	.LFB7:
  68:../src/pbs.c  **** 
  69:../src/pbs.c  **** uint8 pb_getchar( void )
  70:../src/pbs.c  **** {
 2328              		.loc 1 70 0
 2329              		.cfi_startproc
 2330              		@ Function supports interworking.
 2331              		@ args = 0, pretend = 0, frame = 8
 2332              		@ frame_needed = 1, uses_anonymous_args = 0
 2333 02d0 0DC0A0E1 		mov	ip, sp
 2334              	.LCFI14:
 2335              		.cfi_def_cfa_register 12
 2336 02d4 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2337 02d8 04B04CE2 		sub	fp, ip, #4
 2338              		.cfi_offset 14, -8
 2339              		.cfi_offset 13, -12
 2340              		.cfi_offset 11, -16
 2341              	.LCFI15:
 2342              		.cfi_def_cfa 11, 4
 2343 02dc 08D04DE2 		sub	sp, sp, #8
  71:../src/pbs.c  **** 	uint8 scancode;
  72:../src/pbs.c  **** 
  73:../src/pbs.c  **** 	while ((PDATG & PB_LEFT) && (PDATG & PB_RIGHT));
 2344              		.loc 1 73 0
 2345 02e0 0000A0E1 		mov	r0, r0	@ nop
 2346              	.L44:
 2347              		.loc 1 73 0 is_stmt 0 discriminator 1
 2348 02e4 7C309FE5 		ldr	r3, .L46
 2349 02e8 003093E5 		ldr	r3, [r3, #0]
 2350 02ec 403003E2 		and	r3, r3, #64
 2351 02f0 000053E3 		cmp	r3, #0
 2352 02f4 0400000A 		beq	.L43
 2353              		.loc 1 73 0 discriminator 2
 2354 02f8 68309FE5 		ldr	r3, .L46
 2355 02fc 003093E5 		ldr	r3, [r3, #0]
 2356 0300 803003E2 		and	r3, r3, #128
 2357 0304 000053E3 		cmp	r3, #0
 2358 0308 F5FFFF1A 		bne	.L44
 2359              	.L43:
  74:../src/pbs.c  **** 	sw_delay_ms(PB_KEYDOWN_DELAY);
 2360              		.loc 1 74 0 is_stmt 1
 2361 030c 1E00A0E3 		mov	r0, #30
 2362 0310 FEFFFFEB 		bl	sw_delay_ms
  75:../src/pbs.c  **** 
  76:../src/pbs.c  **** 	scancode = pb_scan();
 2363              		.loc 1 76 0
 2364 0314 FEFFFFEB 		bl	pb_scan
 2365 0318 0030A0E1 		mov	r3, r0
 2366 031c 0D304BE5 		strb	r3, [fp, #-13]
  77:../src/pbs.c  **** 	while (!(PDATG & PB_LEFT) || !(PDATG & PB_RIGHT));
 2367              		.loc 1 77 0
 2368 0320 0000A0E1 		mov	r0, r0	@ nop
 2369              	.L45:
 2370              		.loc 1 77 0 is_stmt 0 discriminator 1
 2371 0324 3C309FE5 		ldr	r3, .L46
 2372 0328 003093E5 		ldr	r3, [r3, #0]
 2373 032c 403003E2 		and	r3, r3, #64
 2374 0330 000053E3 		cmp	r3, #0
 2375 0334 FAFFFF0A 		beq	.L45
 2376              		.loc 1 77 0 discriminator 2
 2377 0338 28309FE5 		ldr	r3, .L46
 2378 033c 003093E5 		ldr	r3, [r3, #0]
 2379 0340 803003E2 		and	r3, r3, #128
 2380 0344 000053E3 		cmp	r3, #0
 2381 0348 F5FFFF0A 		beq	.L45
  78:../src/pbs.c  **** 	sw_delay_ms(PB_KEYUP_DELAY);
 2382              		.loc 1 78 0 is_stmt 1
 2383 034c 6400A0E3 		mov	r0, #100
 2384 0350 FEFFFFEB 		bl	sw_delay_ms
  79:../src/pbs.c  **** 
  80:../src/pbs.c  **** 	return scancode;
 2385              		.loc 1 80 0
 2386 0354 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
  81:../src/pbs.c  **** }
 2387              		.loc 1 81 0
 2388 0358 0300A0E1 		mov	r0, r3
 2389 035c 0CD04BE2 		sub	sp, fp, #12
 2390 0360 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2391 0364 1EFF2FE1 		bx	lr
 2392              	.L47:
 2393              		.align	2
 2394              	.L46:
 2395 0368 4400D201 		.word	30539844
 2396              		.cfi_endproc
 2397              	.LFE7:
 2399              		.align	2
 2400              		.global	pb_getchartime
 2402              	pb_getchartime:
 2403              	.LFB8:
  82:../src/pbs.c  **** 
  83:../src/pbs.c  **** uint8 pb_getchartime( uint16 *ms )
  84:../src/pbs.c  **** {
 2404              		.loc 1 84 0
 2405              		.cfi_startproc
 2406              		@ Function supports interworking.
 2407              		@ args = 0, pretend = 0, frame = 16
 2408              		@ frame_needed = 1, uses_anonymous_args = 0
 2409 036c 0DC0A0E1 		mov	ip, sp
 2410              	.LCFI16:
 2411              		.cfi_def_cfa_register 12
 2412 0370 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2413 0374 04B04CE2 		sub	fp, ip, #4
 2414              		.cfi_offset 14, -8
 2415              		.cfi_offset 13, -12
 2416              		.cfi_offset 11, -16
 2417              	.LCFI17:
 2418              		.cfi_def_cfa 11, 4
 2419 0378 10D04DE2 		sub	sp, sp, #16
 2420 037c 18000BE5 		str	r0, [fp, #-24]
  85:../src/pbs.c  ****     uint8 scancode;
  86:../src/pbs.c  ****     
  87:../src/pbs.c  ****     while ( (PDATG & 0xc0) == 0xc0 );
 2421              		.loc 1 87 0
 2422 0380 0000A0E1 		mov	r0, r0	@ nop
 2423              	.L49:
 2424              		.loc 1 87 0 is_stmt 0 discriminator 1
 2425 0384 94309FE5 		ldr	r3, .L51
 2426 0388 003093E5 		ldr	r3, [r3, #0]
 2427 038c C03003E2 		and	r3, r3, #192
 2428 0390 C00053E3 		cmp	r3, #192
 2429 0394 FAFFFF0A 		beq	.L49
  88:../src/pbs.c  ****     timer3_start();
 2430              		.loc 1 88 0 is_stmt 1
 2431 0398 FEFFFFEB 		bl	timer3_start
  89:../src/pbs.c  ****     sw_delay_ms( PB_KEYDOWN_DELAY );
 2432              		.loc 1 89 0
 2433 039c 1E00A0E3 		mov	r0, #30
 2434 03a0 FEFFFFEB 		bl	sw_delay_ms
  90:../src/pbs.c  ****     
  91:../src/pbs.c  ****     scancode = pb_scan();
 2435              		.loc 1 91 0
 2436 03a4 FEFFFFEB 		bl	pb_scan
 2437 03a8 0030A0E1 		mov	r3, r0
 2438 03ac 0D304BE5 		strb	r3, [fp, #-13]
  92:../src/pbs.c  ****     
  93:../src/pbs.c  ****     while (!(PDATG & PB_LEFT) || !(PDATG & PB_RIGHT));
 2439              		.loc 1 93 0
 2440 03b0 0000A0E1 		mov	r0, r0	@ nop
 2441              	.L50:
 2442              		.loc 1 93 0 is_stmt 0 discriminator 1
 2443 03b4 64309FE5 		ldr	r3, .L51
 2444 03b8 003093E5 		ldr	r3, [r3, #0]
 2445 03bc 403003E2 		and	r3, r3, #64
 2446 03c0 000053E3 		cmp	r3, #0
 2447 03c4 FAFFFF0A 		beq	.L50
 2448              		.loc 1 93 0 discriminator 2
 2449 03c8 50309FE5 		ldr	r3, .L51
 2450 03cc 003093E5 		ldr	r3, [r3, #0]
 2451 03d0 803003E2 		and	r3, r3, #128
 2452 03d4 000053E3 		cmp	r3, #0
 2453 03d8 F5FFFF0A 		beq	.L50
  94:../src/pbs.c  ****     *ms = timer3_stop() / 10;
 2454              		.loc 1 94 0 is_stmt 1
 2455 03dc FEFFFFEB 		bl	timer3_stop
 2456 03e0 0030A0E1 		mov	r3, r0
 2457 03e4 0320A0E1 		mov	r2, r3
 2458 03e8 34309FE5 		ldr	r3, .L51+4
 2459 03ec 921383E0 		umull	r1, r3, r2, r3
 2460 03f0 A331A0E1 		mov	r3, r3, lsr #3
 2461 03f4 0338A0E1 		mov	r3, r3, asl #16
 2462 03f8 2328A0E1 		mov	r2, r3, lsr #16
 2463 03fc 18301BE5 		ldr	r3, [fp, #-24]
 2464 0400 B020C3E1 		strh	r2, [r3, #0]	@ movhi
  95:../src/pbs.c  ****     sw_delay_ms( PB_KEYUP_DELAY );
 2465              		.loc 1 95 0
 2466 0404 6400A0E3 		mov	r0, #100
 2467 0408 FEFFFFEB 		bl	sw_delay_ms
  96:../src/pbs.c  **** 
  97:../src/pbs.c  ****     return scancode;
 2468              		.loc 1 97 0
 2469 040c 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
  98:../src/pbs.c  **** }
 2470              		.loc 1 98 0
 2471 0410 0300A0E1 		mov	r0, r3
 2472 0414 0CD04BE2 		sub	sp, fp, #12
 2473 0418 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2474 041c 1EFF2FE1 		bx	lr
 2475              	.L52:
 2476              		.align	2
 2477              	.L51:
 2478 0420 4400D201 		.word	30539844
 2479 0424 CDCCCCCC 		.word	-858993459
 2480              		.cfi_endproc
 2481              	.LFE8:
 2483              		.align	2
 2484              		.global	pb_timeout_getchar
 2486              	pb_timeout_getchar:
 2487              	.LFB9:
  99:../src/pbs.c  **** 
 100:../src/pbs.c  **** uint8 pb_timeout_getchar( uint16 ms )
 101:../src/pbs.c  **** {
 2488              		.loc 1 101 0
 2489              		.cfi_startproc
 2490              		@ Function supports interworking.
 2491              		@ args = 0, pretend = 0, frame = 16
 2492              		@ frame_needed = 1, uses_anonymous_args = 0
 2493 0428 0DC0A0E1 		mov	ip, sp
 2494              	.LCFI18:
 2495              		.cfi_def_cfa_register 12
 2496 042c 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2497 0430 04B04CE2 		sub	fp, ip, #4
 2498              		.cfi_offset 14, -8
 2499              		.cfi_offset 13, -12
 2500              		.cfi_offset 11, -16
 2501              	.LCFI19:
 2502              		.cfi_def_cfa 11, 4
 2503 0434 10D04DE2 		sub	sp, sp, #16
 2504 0438 0030A0E1 		mov	r3, r0
 2505 043c B6314BE1 		strh	r3, [fp, #-22]	@ movhi
 102:../src/pbs.c  **** 	uint8 scancode;
 103:../src/pbs.c  **** 
 104:../src/pbs.c  **** 	if(ms < 6554){
 2506              		.loc 1 104 0
 2507 0440 B6215BE1 		ldrh	r2, [fp, #-22]
 2508 0444 E0309FE5 		ldr	r3, .L59
 2509 0448 030052E1 		cmp	r2, r3
 2510 044c 3100008A 		bhi	.L54
 105:../src/pbs.c  **** 
 106:../src/pbs.c  **** 		timer3_start_timeout(10*ms);
 2511              		.loc 1 106 0
 2512 0450 B6315BE1 		ldrh	r3, [fp, #-22]	@ movhi
 2513 0454 0320A0E1 		mov	r2, r3	@ movhi
 2514 0458 0221A0E1 		mov	r2, r2, asl #2
 2515 045c 033082E0 		add	r3, r2, r3
 2516 0460 8330A0E1 		mov	r3, r3, asl #1
 2517 0464 0338A0E1 		mov	r3, r3, asl #16
 2518 0468 2338A0E1 		mov	r3, r3, lsr #16
 2519 046c 0300A0E1 		mov	r0, r3
 2520 0470 FEFFFFEB 		bl	timer3_start_timeout
 107:../src/pbs.c  **** 		while((PDATG & PB_LEFT)|| (PDATG & PB_RIGHT) || (timer3_timeout()!= 0));
 2521              		.loc 1 107 0
 2522 0474 0000A0E1 		mov	r0, r0	@ nop
 2523              	.L55:
 2524              		.loc 1 107 0 is_stmt 0 discriminator 1
 2525 0478 B0309FE5 		ldr	r3, .L59+4
 2526 047c 003093E5 		ldr	r3, [r3, #0]
 2527 0480 403003E2 		and	r3, r3, #64
 2528 0484 000053E3 		cmp	r3, #0
 2529 0488 FAFFFF1A 		bne	.L55
 2530              		.loc 1 107 0 discriminator 2
 2531 048c 9C309FE5 		ldr	r3, .L59+4
 2532 0490 003093E5 		ldr	r3, [r3, #0]
 2533 0494 803003E2 		and	r3, r3, #128
 2534 0498 000053E3 		cmp	r3, #0
 2535 049c F5FFFF1A 		bne	.L55
 2536              		.loc 1 107 0 discriminator 1
 2537 04a0 FEFFFFEB 		bl	timer3_timeout
 2538 04a4 0030A0E1 		mov	r3, r0
 2539 04a8 000053E3 		cmp	r3, #0
 2540 04ac F1FFFF1A 		bne	.L55
 108:../src/pbs.c  **** 
 109:../src/pbs.c  **** 		if (timer3_timeout()!= 0)return PB_FAILURE;
 2541              		.loc 1 109 0 is_stmt 1
 2542 04b0 FEFFFFEB 		bl	timer3_timeout
 2543 04b4 0030A0E1 		mov	r3, r0
 2544 04b8 000053E3 		cmp	r3, #0
 2545 04bc 0100000A 		beq	.L56
 2546              		.loc 1 109 0 is_stmt 0 discriminator 1
 2547 04c0 FF30A0E3 		mov	r3, #255
 2548 04c4 140000EA 		b	.L57
 2549              	.L56:
 110:../src/pbs.c  **** 		else{
 111:../src/pbs.c  **** 			sw_delay_ms(PB_KEYDOWN_DELAY);
 2550              		.loc 1 111 0 is_stmt 1
 2551 04c8 1E00A0E3 		mov	r0, #30
 2552 04cc FEFFFFEB 		bl	sw_delay_ms
 112:../src/pbs.c  **** 			scancode = pb_scan();
 2553              		.loc 1 112 0
 2554 04d0 FEFFFFEB 		bl	pb_scan
 2555 04d4 0030A0E1 		mov	r3, r0
 2556 04d8 0D304BE5 		strb	r3, [fp, #-13]
 113:../src/pbs.c  **** 
 114:../src/pbs.c  **** 			while (!(PDATG & PB_LEFT) || !(PDATG & PB_RIGHT));
 2557              		.loc 1 114 0
 2558 04dc 0000A0E1 		mov	r0, r0	@ nop
 2559              	.L58:
 2560              		.loc 1 114 0 is_stmt 0 discriminator 1
 2561 04e0 48309FE5 		ldr	r3, .L59+4
 2562 04e4 003093E5 		ldr	r3, [r3, #0]
 2563 04e8 403003E2 		and	r3, r3, #64
 2564 04ec 000053E3 		cmp	r3, #0
 2565 04f0 FAFFFF0A 		beq	.L58
 2566              		.loc 1 114 0 discriminator 2
 2567 04f4 34309FE5 		ldr	r3, .L59+4
 2568 04f8 003093E5 		ldr	r3, [r3, #0]
 2569 04fc 803003E2 		and	r3, r3, #128
 2570 0500 000053E3 		cmp	r3, #0
 2571 0504 F5FFFF0A 		beq	.L58
 115:../src/pbs.c  **** 			sw_delay_ms(PB_KEYUP_DELAY);
 2572              		.loc 1 115 0 is_stmt 1
 2573 0508 6400A0E3 		mov	r0, #100
 2574 050c FEFFFFEB 		bl	sw_delay_ms
 116:../src/pbs.c  **** 
 117:../src/pbs.c  **** 			return scancode;
 2575              		.loc 1 117 0
 2576 0510 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 2577 0514 000000EA 		b	.L57
 2578              	.L54:
 118:../src/pbs.c  **** 		}
 119:../src/pbs.c  **** 	}
 120:../src/pbs.c  **** 
 121:../src/pbs.c  **** 	return PB_FAILURE;
 2579              		.loc 1 121 0
 2580 0518 FF30A0E3 		mov	r3, #255
 2581              	.L57:
 122:../src/pbs.c  **** }
 2582              		.loc 1 122 0
 2583 051c 0300A0E1 		mov	r0, r3
 2584 0520 0CD04BE2 		sub	sp, fp, #12
 2585 0524 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2586 0528 1EFF2FE1 		bx	lr
 2587              	.L60:
 2588              		.align	2
 2589              	.L59:
 2590 052c 99190000 		.word	6553
 2591 0530 4400D201 		.word	30539844
 2592              		.cfi_endproc
 2593              	.LFE9:
 2595              		.align	2
 2596              		.global	pbs_open
 2598              	pbs_open:
 2599              	.LFB10:
 123:../src/pbs.c  **** 
 124:../src/pbs.c  **** void pbs_open( void (*isr)(void) )
 125:../src/pbs.c  **** {
 2600              		.loc 1 125 0
 2601              		.cfi_startproc
 2602              		@ Function supports interworking.
 2603              		@ args = 0, pretend = 0, frame = 8
 2604              		@ frame_needed = 1, uses_anonymous_args = 0
 2605 0534 0DC0A0E1 		mov	ip, sp
 2606              	.LCFI20:
 2607              		.cfi_def_cfa_register 12
 2608 0538 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2609 053c 04B04CE2 		sub	fp, ip, #4
 2610              		.cfi_offset 14, -8
 2611              		.cfi_offset 13, -12
 2612              		.cfi_offset 11, -16
 2613              	.LCFI21:
 2614              		.cfi_def_cfa 11, 4
 2615 0540 08D04DE2 		sub	sp, sp, #8
 2616 0544 10000BE5 		str	r0, [fp, #-16]
 126:../src/pbs.c  **** 	pISR_PB = (uint32) isr;
 2617              		.loc 1 126 0
 2618 0548 3C309FE5 		ldr	r3, .L62
 2619 054c 10201BE5 		ldr	r2, [fp, #-16]
 2620 0550 002083E5 		str	r2, [r3, #0]
 127:../src/pbs.c  **** 	EXTINTPND = (BIT_EINT6 | BIT_EINT7);
 2621              		.loc 1 127 0
 2622 0554 34309FE5 		ldr	r3, .L62+4
 2623 0558 0C20A0E3 		mov	r2, #12
 2624 055c 002083E5 		str	r2, [r3, #0]
 128:../src/pbs.c  **** 	I_ISPC = BIT_EINT4567;
 2625              		.loc 1 128 0
 2626 0560 2C309FE5 		ldr	r3, .L62+8
 2627 0564 0226A0E3 		mov	r2, #2097152
 2628 0568 002083E5 		str	r2, [r3, #0]
 129:../src/pbs.c  **** 	INTMSK &= ~(BIT_GLOBAL | (1 << 21));
 2629              		.loc 1 129 0
 2630 056c 24309FE5 		ldr	r3, .L62+12
 2631 0570 20209FE5 		ldr	r2, .L62+12
 2632 0574 002092E5 		ldr	r2, [r2, #0]
 2633 0578 4226C2E3 		bic	r2, r2, #69206016
 2634 057c 002083E5 		str	r2, [r3, #0]
 130:../src/pbs.c  **** }
 2635              		.loc 1 130 0
 2636 0580 0CD04BE2 		sub	sp, fp, #12
 2637 0584 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2638 0588 1EFF2FE1 		bx	lr
 2639              	.L63:
 2640              		.align	2
 2641              	.L62:
 2642 058c 74FF7F0C 		.word	209715060
 2643 0590 5400D201 		.word	30539860
 2644 0594 2400E001 		.word	31457316
 2645 0598 0C00E001 		.word	31457292
 2646              		.cfi_endproc
 2647              	.LFE10:
 2649              		.align	2
 2650              		.global	pbs_close
 2652              	pbs_close:
 2653              	.LFB11:
 131:../src/pbs.c  **** 
 132:../src/pbs.c  **** void pbs_close( void )
 133:../src/pbs.c  **** {
 2654              		.loc 1 133 0
 2655              		.cfi_startproc
 2656              		@ Function supports interworking.
 2657              		@ args = 0, pretend = 0, frame = 0
 2658              		@ frame_needed = 1, uses_anonymous_args = 0
 2659 059c 0DC0A0E1 		mov	ip, sp
 2660              	.LCFI22:
 2661              		.cfi_def_cfa_register 12
 2662 05a0 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2663 05a4 04B04CE2 		sub	fp, ip, #4
 2664              		.cfi_offset 14, -8
 2665              		.cfi_offset 13, -12
 2666              		.cfi_offset 11, -16
 2667              	.LCFI23:
 2668              		.cfi_def_cfa 11, 4
 134:../src/pbs.c  **** 	INTMSK |= (1 << 21);
 2669              		.loc 1 134 0
 2670 05a8 24309FE5 		ldr	r3, .L65
 2671 05ac 20209FE5 		ldr	r2, .L65
 2672 05b0 002092E5 		ldr	r2, [r2, #0]
 2673 05b4 022682E3 		orr	r2, r2, #2097152
 2674 05b8 002083E5 		str	r2, [r3, #0]
 135:../src/pbs.c  **** 	pISR_PB = (uint32) isr_PB_dummy;
 2675              		.loc 1 135 0
 2676 05bc 14309FE5 		ldr	r3, .L65+4
 2677 05c0 14209FE5 		ldr	r2, .L65+8
 2678 05c4 002083E5 		str	r2, [r3, #0]
 136:../src/pbs.c  **** }
 2679              		.loc 1 136 0
 2680 05c8 0CD04BE2 		sub	sp, fp, #12
 2681 05cc 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2682 05d0 1EFF2FE1 		bx	lr
 2683              	.L66:
 2684              		.align	2
 2685              	.L65:
 2686 05d4 0C00E001 		.word	31457292
 2687 05d8 74FF7F0C 		.word	209715060
 2688 05dc 00000000 		.word	isr_PB_dummy
 2689              		.cfi_endproc
 2690              	.LFE11:
 2692              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 pbs.c
C:\Users\baneg\AppData\Local\Temp\cchw8I9y.s:1917   .text:00000000 $a
C:\Users\baneg\AppData\Local\Temp\cchw8I9y.s:1920   .text:00000000 pbs_init
C:\Users\baneg\AppData\Local\Temp\cchw8I9y.s:1949   .text:0000001c pb_scan
C:\Users\baneg\AppData\Local\Temp\cchw8I9y.s:1997   .text:00000074 $d
C:\Users\baneg\AppData\Local\Temp\cchw8I9y.s:2001   .text:00000078 $a
C:\Users\baneg\AppData\Local\Temp\cchw8I9y.s:2004   .text:00000078 pb_status
C:\Users\baneg\AppData\Local\Temp\cchw8I9y.s:2072   .text:000000fc pb_wait_keydown
C:\Users\baneg\AppData\Local\Temp\cchw8I9y.s:2124   .text:00000160 $d
C:\Users\baneg\AppData\Local\Temp\cchw8I9y.s:2128   .text:00000164 $a
C:\Users\baneg\AppData\Local\Temp\cchw8I9y.s:2131   .text:00000164 pb_wait_keyup
C:\Users\baneg\AppData\Local\Temp\cchw8I9y.s:2208   .text:00000208 $d
C:\Users\baneg\AppData\Local\Temp\cchw8I9y.s:2212   .text:0000020c $a
C:\Users\baneg\AppData\Local\Temp\cchw8I9y.s:2215   .text:0000020c pb_wait_any_keydown
C:\Users\baneg\AppData\Local\Temp\cchw8I9y.s:2254   .text:00000250 $d
C:\Users\baneg\AppData\Local\Temp\cchw8I9y.s:2258   .text:00000254 $a
C:\Users\baneg\AppData\Local\Temp\cchw8I9y.s:2261   .text:00000254 pb_wait_any_keyup
C:\Users\baneg\AppData\Local\Temp\cchw8I9y.s:2319   .text:000002cc $d
C:\Users\baneg\AppData\Local\Temp\cchw8I9y.s:2323   .text:000002d0 $a
C:\Users\baneg\AppData\Local\Temp\cchw8I9y.s:2326   .text:000002d0 pb_getchar
C:\Users\baneg\AppData\Local\Temp\cchw8I9y.s:2395   .text:00000368 $d
C:\Users\baneg\AppData\Local\Temp\cchw8I9y.s:2399   .text:0000036c $a
C:\Users\baneg\AppData\Local\Temp\cchw8I9y.s:2402   .text:0000036c pb_getchartime
C:\Users\baneg\AppData\Local\Temp\cchw8I9y.s:2478   .text:00000420 $d
C:\Users\baneg\AppData\Local\Temp\cchw8I9y.s:2483   .text:00000428 $a
C:\Users\baneg\AppData\Local\Temp\cchw8I9y.s:2486   .text:00000428 pb_timeout_getchar
C:\Users\baneg\AppData\Local\Temp\cchw8I9y.s:2590   .text:0000052c $d
C:\Users\baneg\AppData\Local\Temp\cchw8I9y.s:2595   .text:00000534 $a
C:\Users\baneg\AppData\Local\Temp\cchw8I9y.s:2598   .text:00000534 pbs_open
C:\Users\baneg\AppData\Local\Temp\cchw8I9y.s:2642   .text:0000058c $d
C:\Users\baneg\AppData\Local\Temp\cchw8I9y.s:2649   .text:0000059c $a
C:\Users\baneg\AppData\Local\Temp\cchw8I9y.s:2652   .text:0000059c pbs_close
C:\Users\baneg\AppData\Local\Temp\cchw8I9y.s:2686   .text:000005d4 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
timers_init
sw_delay_ms
timer3_start
timer3_stop
timer3_start_timeout
timer3_timeout
isr_PB_dummy
