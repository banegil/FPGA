   1              		.cpu arm7tdmi
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 18, 4
  11              		.file	"keyboard.c"
  21              	.Ltext0:
  22              		.file 1 "../keyboard.c"
 1701              		.align	2
 1704              	keyboard_base:
 1705 0000 00000006 		.word	100663296
 1706              		.text
 1707              		.align	2
 1708              		.global	kb_scan
 1710              	kb_scan:
 1711              	.LFB0:
   1:../keyboard.c **** /*******************************************************************************************
   2:../keyboard.c **** * File:		keyboard.c
   3:../keyboard.c **** * Author:	
   4:../keyboard.c **** * Desc:		Funciones de teclado
   5:../keyboard.c **** * History:	
   6:../keyboard.c **** *********************************************************************************************/
   7:../keyboard.c **** 
   8:../keyboard.c **** /*--- Ficheros de cabecera ---*/
   9:../keyboard.c **** #include "44b.h"
  10:../keyboard.c **** #include "keyboard.h"
  11:../keyboard.c **** 
  12:../keyboard.c **** /*--- Definición de macros ---*/
  13:../keyboard.c **** #define KEY_VALUE_MASK	0x0f
  14:../keyboard.c **** 
  15:../keyboard.c **** /*--- Variables globales ---*/
  16:../keyboard.c **** volatile static unsigned char *keyboard_base = (unsigned char *)0x06000000;
  17:../keyboard.c **** 
  18:../keyboard.c **** 
  19:../keyboard.c **** int kb_scan(void)
  20:../keyboard.c **** {
 1712              		.loc 1 20 0
 1713              		.cfi_startproc
 1714              		@ Function supports interworking.
 1715              		@ args = 0, pretend = 0, frame = 96
 1716              		@ frame_needed = 1, uses_anonymous_args = 0
 1717 0000 0DC0A0E1 		mov	ip, sp
 1718              	.LCFI0:
 1719              		.cfi_def_cfa_register 12
 1720 0004 10D82DE9 		stmfd	sp!, {r4, fp, ip, lr, pc}
 1721 0008 04B04CE2 		sub	fp, ip, #4
 1722              		.cfi_offset 14, -8
 1723              		.cfi_offset 13, -12
 1724              		.cfi_offset 11, -16
 1725              		.cfi_offset 4, -20
 1726              	.LCFI1:
 1727              		.cfi_def_cfa 11, 4
 1728 000c 64D04DE2 		sub	sp, sp, #100
  21:../keyboard.c **** 	int value = -1;
 1729              		.loc 1 21 0
 1730 0010 0030E0E3 		mvn	r3, #0
 1731 0014 18300BE5 		str	r3, [fp, #-24]
  22:../keyboard.c **** 	int i;
  23:../keyboard.c **** 	char temp;
  24:../keyboard.c **** 	int lines[4]  = {0xfd, 0xfb, 0xf7, 0xef};
 1732              		.loc 1 24 0
 1733 0018 98319FE5 		ldr	r3, .L9
 1734 001c 30C04BE2 		sub	ip, fp, #48
 1735 0020 0F0093E8 		ldmia	r3, {r0, r1, r2, r3}
 1736 0024 0F008CE8 		stmia	ip, {r0, r1, r2, r3}
  25:../keyboard.c **** 	int map[4][4] = {{0, 1, 2, 3},
 1737              		.loc 1 25 0
 1738 0028 8C319FE5 		ldr	r3, .L9+4
 1739 002c 70C04BE2 		sub	ip, fp, #112
 1740 0030 0340A0E1 		mov	r4, r3
 1741 0034 0F00B4E8 		ldmia	r4!, {r0, r1, r2, r3}
 1742 0038 0F00ACE8 		stmia	ip!, {r0, r1, r2, r3}
 1743 003c 0F00B4E8 		ldmia	r4!, {r0, r1, r2, r3}
 1744 0040 0F00ACE8 		stmia	ip!, {r0, r1, r2, r3}
 1745 0044 0F00B4E8 		ldmia	r4!, {r0, r1, r2, r3}
 1746 0048 0F00ACE8 		stmia	ip!, {r0, r1, r2, r3}
 1747 004c 0F0094E8 		ldmia	r4, {r0, r1, r2, r3}
 1748 0050 0F008CE8 		stmia	ip, {r0, r1, r2, r3}
  26:../keyboard.c **** 					{4, 5, 6, 7},
  27:../keyboard.c **** 					{8, 9, 0xA, 0xB},
  28:../keyboard.c **** 					{0xC, 0xD, 0xE, 0xF}};
  29:../keyboard.c **** 
  30:../keyboard.c **** 	for (i = 0; (i < 4) && (value == -1); i++) {
 1749              		.loc 1 30 0
 1750 0054 0030A0E3 		mov	r3, #0
 1751 0058 1C300BE5 		str	r3, [fp, #-28]
 1752 005c 4A0000EA 		b	.L2
 1753              	.L8:
  31:../keyboard.c **** 		temp = *(keyboard_base+lines[i]);
 1754              		.loc 1 31 0
 1755 0060 58319FE5 		ldr	r3, .L9+8
 1756 0064 002093E5 		ldr	r2, [r3, #0]
 1757 0068 1C101BE5 		ldr	r1, [fp, #-28]
 1758 006c 1B30E0E3 		mvn	r3, #27
 1759 0070 0111A0E1 		mov	r1, r1, asl #2
 1760 0074 14004BE2 		sub	r0, fp, #20
 1761 0078 011080E0 		add	r1, r0, r1
 1762 007c 033081E0 		add	r3, r1, r3
 1763 0080 003093E5 		ldr	r3, [r3, #0]
 1764 0084 033082E0 		add	r3, r2, r3
 1765 0088 0030D3E5 		ldrb	r3, [r3, #0]
 1766 008c 1D304BE5 		strb	r3, [fp, #-29]
  32:../keyboard.c **** 
  33:../keyboard.c **** 		temp |= (0xF0);
 1767              		.loc 1 33 0
 1768 0090 1D305BE5 		ldrb	r3, [fp, #-29]
 1769 0094 033EE0E1 		mvn	r3, r3, asl #28
 1770 0098 233EE0E1 		mvn	r3, r3, lsr #28
 1771 009c 1D304BE5 		strb	r3, [fp, #-29]
  34:../keyboard.c **** 		if(( temp & KEY_VALUE_MASK) != KEY_VALUE_MASK) {
 1772              		.loc 1 34 0
 1773 00a0 1D305BE5 		ldrb	r3, [fp, #-29]	@ zero_extendqisi2
 1774 00a4 0F3003E2 		and	r3, r3, #15
 1775 00a8 0F0053E3 		cmp	r3, #15
 1776 00ac 3300000A 		beq	.L3
  35:../keyboard.c **** 			//COMPLETAR: 
  36:../keyboard.c **** 			if(temp == (temp&~(0x1))) // si está el bit 1 a 0 la tecla es la map[i][3]
 1777              		.loc 1 36 0
 1778 00b0 1D205BE5 		ldrb	r2, [fp, #-29]	@ zero_extendqisi2
 1779 00b4 1D305BE5 		ldrb	r3, [fp, #-29]	@ zero_extendqisi2
 1780 00b8 0130C3E3 		bic	r3, r3, #1
 1781 00bc 030052E1 		cmp	r2, r3
 1782 00c0 0700001A 		bne	.L4
  37:../keyboard.c **** 			{
  38:../keyboard.c **** 				value = map[i][3];
 1783              		.loc 1 38 0
 1784 00c4 1C201BE5 		ldr	r2, [fp, #-28]
 1785 00c8 4F30E0E3 		mvn	r3, #79
 1786 00cc 0222A0E1 		mov	r2, r2, asl #4
 1787 00d0 14104BE2 		sub	r1, fp, #20
 1788 00d4 022081E0 		add	r2, r1, r2
 1789 00d8 033082E0 		add	r3, r2, r3
 1790 00dc 003093E5 		ldr	r3, [r3, #0]
 1791 00e0 18300BE5 		str	r3, [fp, #-24]
 1792              	.L4:
  39:../keyboard.c **** 			}
  40:../keyboard.c **** 			if(temp == (temp&~(0x1 << 1)))// si está el bit 2 a 0 la tecla es la map[i][2]
 1793              		.loc 1 40 0
 1794 00e4 1D205BE5 		ldrb	r2, [fp, #-29]	@ zero_extendqisi2
 1795 00e8 1D305BE5 		ldrb	r3, [fp, #-29]	@ zero_extendqisi2
 1796 00ec 0230C3E3 		bic	r3, r3, #2
 1797 00f0 030052E1 		cmp	r2, r3
 1798 00f4 0700001A 		bne	.L5
  41:../keyboard.c **** 			{
  42:../keyboard.c **** 				value = map[i][2];
 1799              		.loc 1 42 0
 1800 00f8 1C201BE5 		ldr	r2, [fp, #-28]
 1801 00fc 5330E0E3 		mvn	r3, #83
 1802 0100 0222A0E1 		mov	r2, r2, asl #4
 1803 0104 14004BE2 		sub	r0, fp, #20
 1804 0108 022080E0 		add	r2, r0, r2
 1805 010c 033082E0 		add	r3, r2, r3
 1806 0110 003093E5 		ldr	r3, [r3, #0]
 1807 0114 18300BE5 		str	r3, [fp, #-24]
 1808              	.L5:
  43:../keyboard.c **** 			}
  44:../keyboard.c **** 			if(temp == (temp&~(0x1 << 2))) // si está el bit 3 a 0 la tecla es la map[i][1]
 1809              		.loc 1 44 0
 1810 0118 1D205BE5 		ldrb	r2, [fp, #-29]	@ zero_extendqisi2
 1811 011c 1D305BE5 		ldrb	r3, [fp, #-29]	@ zero_extendqisi2
 1812 0120 0430C3E3 		bic	r3, r3, #4
 1813 0124 030052E1 		cmp	r2, r3
 1814 0128 0700001A 		bne	.L6
  45:../keyboard.c **** 			{
  46:../keyboard.c **** 				value = map[i][1];
 1815              		.loc 1 46 0
 1816 012c 1C201BE5 		ldr	r2, [fp, #-28]
 1817 0130 5730E0E3 		mvn	r3, #87
 1818 0134 0222A0E1 		mov	r2, r2, asl #4
 1819 0138 14104BE2 		sub	r1, fp, #20
 1820 013c 022081E0 		add	r2, r1, r2
 1821 0140 033082E0 		add	r3, r2, r3
 1822 0144 003093E5 		ldr	r3, [r3, #0]
 1823 0148 18300BE5 		str	r3, [fp, #-24]
 1824              	.L6:
  47:../keyboard.c **** 			}
  48:../keyboard.c **** 			if(temp == (temp&~(0x1 << 3))) // si está el bit 4 a 0 la tecla es la map[i][0]
 1825              		.loc 1 48 0
 1826 014c 1D205BE5 		ldrb	r2, [fp, #-29]	@ zero_extendqisi2
 1827 0150 1D305BE5 		ldrb	r3, [fp, #-29]	@ zero_extendqisi2
 1828 0154 0830C3E3 		bic	r3, r3, #8
 1829 0158 030052E1 		cmp	r2, r3
 1830 015c 0700001A 		bne	.L3
  49:../keyboard.c **** 			{
  50:../keyboard.c **** 				value = map[i][0];
 1831              		.loc 1 50 0
 1832 0160 1C201BE5 		ldr	r2, [fp, #-28]
 1833 0164 5B30E0E3 		mvn	r3, #91
 1834 0168 0222A0E1 		mov	r2, r2, asl #4
 1835 016c 14004BE2 		sub	r0, fp, #20
 1836 0170 022080E0 		add	r2, r0, r2
 1837 0174 033082E0 		add	r3, r2, r3
 1838 0178 003093E5 		ldr	r3, [r3, #0]
 1839 017c 18300BE5 		str	r3, [fp, #-24]
 1840              	.L3:
  30:../keyboard.c **** 	for (i = 0; (i < 4) && (value == -1); i++) {
 1841              		.loc 1 30 0
 1842 0180 1C301BE5 		ldr	r3, [fp, #-28]
 1843 0184 013083E2 		add	r3, r3, #1
 1844 0188 1C300BE5 		str	r3, [fp, #-28]
 1845              	.L2:
  30:../keyboard.c **** 	for (i = 0; (i < 4) && (value == -1); i++) {
 1846              		.loc 1 30 0 is_stmt 0 discriminator 1
 1847 018c 1C301BE5 		ldr	r3, [fp, #-28]
 1848 0190 030053E3 		cmp	r3, #3
 1849 0194 020000CA 		bgt	.L7
  30:../keyboard.c **** 	for (i = 0; (i < 4) && (value == -1); i++) {
 1850              		.loc 1 30 0 discriminator 2
 1851 0198 18301BE5 		ldr	r3, [fp, #-24]
 1852 019c 010073E3 		cmn	r3, #1
 1853 01a0 AEFFFF0A 		beq	.L8
 1854              	.L7:
  51:../keyboard.c **** 			}
  52:../keyboard.c **** 		}
  53:../keyboard.c **** 	}
  54:../keyboard.c **** 
  55:../keyboard.c **** 	return value;
 1855              		.loc 1 55 0 is_stmt 1
 1856 01a4 18301BE5 		ldr	r3, [fp, #-24]
  56:../keyboard.c **** }
 1857              		.loc 1 56 0
 1858 01a8 0300A0E1 		mov	r0, r3
 1859 01ac 10D04BE2 		sub	sp, fp, #16
 1860 01b0 10689DE8 		ldmfd	sp, {r4, fp, sp, lr}
 1861 01b4 1EFF2FE1 		bx	lr
 1862              	.L10:
 1863              		.align	2
 1864              	.L9:
 1865 01b8 00000000 		.word	C.0.4679
 1866 01bc 10000000 		.word	C.1.4680
 1867 01c0 00000000 		.word	keyboard_base
 1868              		.cfi_endproc
 1869              	.LFE0:
 1871              		.section	.rodata
 1872              		.align	2
 1875              	C.0.4679:
 1876 0000 FD000000 		.word	253
 1877 0004 FB000000 		.word	251
 1878 0008 F7000000 		.word	247
 1879 000c EF000000 		.word	239
 1880              		.align	2
 1883              	C.1.4680:
 1884 0010 00000000 		.word	0
 1885 0014 01000000 		.word	1
 1886 0018 02000000 		.word	2
 1887 001c 03000000 		.word	3
 1888 0020 04000000 		.word	4
 1889 0024 05000000 		.word	5
 1890 0028 06000000 		.word	6
 1891 002c 07000000 		.word	7
 1892 0030 08000000 		.word	8
 1893 0034 09000000 		.word	9
 1894 0038 0A000000 		.word	10
 1895 003c 0B000000 		.word	11
 1896 0040 0C000000 		.word	12
 1897 0044 0D000000 		.word	13
 1898 0048 0E000000 		.word	14
 1899 004c 0F000000 		.word	15
 1900              		.text
 1901              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 keyboard.c
C:\Users\USUARI~1\AppData\Local\Temp\ccLuai6s.s:1701   .data:00000000 $d
C:\Users\USUARI~1\AppData\Local\Temp\ccLuai6s.s:1704   .data:00000000 keyboard_base
C:\Users\USUARI~1\AppData\Local\Temp\ccLuai6s.s:1707   .text:00000000 $a
C:\Users\USUARI~1\AppData\Local\Temp\ccLuai6s.s:1710   .text:00000000 kb_scan
C:\Users\USUARI~1\AppData\Local\Temp\ccLuai6s.s:1865   .text:000001b8 $d
C:\Users\USUARI~1\AppData\Local\Temp\ccLuai6s.s:1875   .rodata:00000000 C.0.4679
C:\Users\USUARI~1\AppData\Local\Temp\ccLuai6s.s:1883   .rodata:00000010 C.1.4680
C:\Users\USUARI~1\AppData\Local\Temp\ccLuai6s.s:1872   .rodata:00000000 $d
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
